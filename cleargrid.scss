$column-count: 12 !default;
$gutter-size: 0.5rem !default;
$wrapping-gutter: true !default;
// Breakpoints at 640px and 1024px
$breakpoints: (
  md: 40em,
  lg: 64em
);

// Find the width of 1 column based upon the column count
// -----------------------------------------------------------------------------
@function find-column-width($columns: $column-count) {
  $column-width: (100% / $columns);
  @return $column-width;
}

// Create a flex container to house the columns
// -----------------------------------------------------------------------------
@mixin grid($gutters: true, $wrap: false) {
  box-sizing: border-box;
  display: flex;
  @if $wrap {
    flex-wrap: wrap;
  }

  > * {
    box-sizing: border-box;
    @if $gutters {
      padding-left: $gutter-size;
      padding-right: $gutter-size;
    }
    @if $wrapping-gutter {
      padding-top: $gutter-size;
      padding-bottom: $gutter-size;
    }
  }
}

// Create a column of the grid
// -----------------------------------------------------------------------------
@mixin column($columns: 1, $mq: null, $grow: 0, $shrink: 0) {
  $base-width: find-column-width();
  $column-width: $base-width * $columns;

  @if ($mq == null) {
    @if ($grow != 0) {
      flex-grow: $grow;
    }
    flex-shrink: $shrink;
    width: $column-width;
  }

  @if ($mq != null) {
    @if (map-has-key($breakpoints, $mq)) {
      @media (min-width: #{map-get($breakpoints, $mq)}) {
        @if ($grow != 0) {
          flex-grow: $grow;
        }
        @if ($shrink != 0) {
          flex-shrink: $shrink;
        }
        width: $column-width;
      }
    }
  }
}
